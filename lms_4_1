"""Функциональное приветствие"""
def print_hello(name):
    print(f'Hello, {name}!')


"""Функциональный НОД"""
def gcd(n, m):
    while n != 0 and m != 0:
        if n > m:
            n = n - m
        else:
            m = m - n
    return max(n, m)


"""Длина числа"""
def number_length(num):
    return len(str(abs(num)))


"""Имя of the month"""
def month(num, language):
    month_name = {
        'ru': ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь',
               'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
        'en': ['January', 'February', 'March', 'April', 'May', 'June',
               'July', 'August', 'September', 'October', 'November', 'December']
    }
    return month_name[language][num - 1]


"""Числовая строка"""
def split_number(nums):
    return tuple(int(n) for n in nums.split())


"""Модернизация системы вывода"""
output_s = set()


def modern_print(text):
    if text not in output_s:
        output_s.add(text)
        print(text)


"""Шахматный «обед»"""
def can_eat(horse: tuple, another: tuple):
    x1 = horse[0]
    x2 = horse[1]
    y1 = another[0]
    y2 = another[1]
    return (abs(x1 - y1) == 1 and abs(x2 - y2) == 2) or (abs(x1 - y1) == 2 and abs(x2 - y2) == 1)


"""А роза упала на лапу Азора 7.0"""
def is_palindrome(s):
    return str(s) == str(s)[::-1] if type(s) in (int, float) else s == s[::-1]


"""Простая задача 5.0"""
def is_prime(num):
    for i in range(2, int(num ** 0.5) + 1):
        if num % i == 0:
            return False
    return num != 1


"""Слияние"""
def merge(n1: tuple, n2: tuple):
    result = []
    i, j = 0, 0

    while i < len(n1) and j < len(n2):
        if n1[i] < n2[j]:
            result.append(n1[i])
            i += 1
        else:
            result.append(n2[j])
            j += 1

    result.extend(n1[i:])
    result.extend(n2[j:])
    return tuple(result)
